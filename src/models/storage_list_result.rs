/*
 * 用户全部 API 文档
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StorageListResult {
    #[serde(rename = "take", skip_serializing_if = "Option::is_none")]
    pub take: Option<i32>,
    #[serde(rename = "skip", skip_serializing_if = "Option::is_none")]
    pub skip: Option<i32>,
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<i64>,
    #[serde(rename = "data", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub data: Option<Option<serde_json::Value>>,
    #[serde(rename = "explain", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub explain: Option<Option<serde_json::Value>>,
}

impl StorageListResult {
    pub fn new() -> StorageListResult {
        StorageListResult {
            take: None,
            skip: None,
            total: None,
            data: None,
            explain: None,
        }
    }
}

