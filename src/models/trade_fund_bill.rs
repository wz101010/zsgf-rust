/*
 * 用户全部 API 文档
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TradeFundBill {
    #[serde(rename = "amount", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub amount: Option<Option<String>>,
    #[serde(rename = "bankCode", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub bank_code: Option<Option<String>>,
    #[serde(rename = "fundChannel", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub fund_channel: Option<Option<String>>,
    #[serde(rename = "fundType", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub fund_type: Option<Option<String>>,
    #[serde(rename = "realAmount", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub real_amount: Option<Option<String>>,
}

impl TradeFundBill {
    pub fn new() -> TradeFundBill {
        TradeFundBill {
            amount: None,
            bank_code: None,
            fund_channel: None,
            fund_type: None,
            real_amount: None,
        }
    }
}

