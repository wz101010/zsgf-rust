/*
 * 用户全部 API 文档
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GeoLocation : 地理位置
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GeoLocation {
    /// 唯一标识
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// 业务代码
    #[serde(rename = "bizCode")]
    pub biz_code: String,
    /// 业务ID
    #[serde(rename = "bizID")]
    pub biz_id: i64,
    #[serde(rename = "coordinates")]
    pub coordinates: Box<models::MySqlGeometry>,
    /// 地点的名称
    #[serde(rename = "locationName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub location_name: Option<Option<String>>,
    /// 地点类型
    #[serde(rename = "locationType", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub location_type: Option<Option<String>>,
    /// 收货人姓名
    #[serde(rename = "recipientName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub recipient_name: Option<Option<String>>,
    /// 收货人联系电话
    #[serde(rename = "phoneNumber", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub phone_number: Option<Option<String>>,
    /// 收货人电子邮件
    #[serde(rename = "email", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub email: Option<Option<String>>,
    /// 国家
    #[serde(rename = "country", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub country: Option<Option<String>>,
    /// 州/省
    #[serde(rename = "state", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub state: Option<Option<String>>,
    /// 城市
    #[serde(rename = "city", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub city: Option<Option<String>>,
    /// 区/县
    #[serde(rename = "district", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub district: Option<Option<String>>,
    /// 街道
    #[serde(rename = "street", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub street: Option<Option<String>>,
    /// 邮政编码
    #[serde(rename = "zipCode", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub zip_code: Option<Option<String>>,
    /// 详细的地址信息
    #[serde(rename = "address", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub address: Option<Option<String>>,
    /// 地址类型
    #[serde(rename = "mapType", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub map_type: Option<Option<String>>,
    /// 备注
    #[serde(rename = "remark", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub remark: Option<Option<String>>,
    /// 标签
    #[serde(rename = "tags", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Option<String>>,
    /// 是否启用
    #[serde(rename = "enable", skip_serializing_if = "Option::is_none")]
    pub enable: Option<bool>,
    /// 排序索引
    #[serde(rename = "showIndex", skip_serializing_if = "Option::is_none")]
    pub show_index: Option<i32>,
    /// 创建时间
    #[serde(rename = "createDate", skip_serializing_if = "Option::is_none")]
    pub create_date: Option<String>,
    /// 最后更新时间
    #[serde(rename = "lastUpdate", skip_serializing_if = "Option::is_none")]
    pub last_update: Option<String>,
}

impl GeoLocation {
    /// 地理位置
    pub fn new(biz_code: String, biz_id: i64, coordinates: models::MySqlGeometry) -> GeoLocation {
        GeoLocation {
            id: None,
            biz_code,
            biz_id,
            coordinates: Box::new(coordinates),
            location_name: None,
            location_type: None,
            recipient_name: None,
            phone_number: None,
            email: None,
            country: None,
            state: None,
            city: None,
            district: None,
            street: None,
            zip_code: None,
            address: None,
            map_type: None,
            remark: None,
            tags: None,
            enable: None,
            show_index: None,
            create_date: None,
            last_update: None,
        }
    }
}

