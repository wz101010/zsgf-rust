/*
 * 用户全部 API 文档
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProfileResult {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    #[serde(rename = "unionID", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub union_id: Option<Option<String>>,
    #[serde(rename = "phone", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub phone: Option<Option<String>>,
    #[serde(rename = "createDate", skip_serializing_if = "Option::is_none")]
    pub create_date: Option<String>,
    #[serde(rename = "userName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub user_name: Option<Option<String>>,
    #[serde(rename = "phoneIsValid", skip_serializing_if = "Option::is_none")]
    pub phone_is_valid: Option<bool>,
    #[serde(rename = "data", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub data: Option<Option<String>>,
    #[serde(rename = "email", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub email: Option<Option<String>>,
    #[serde(rename = "emailIsValid", skip_serializing_if = "Option::is_none")]
    pub email_is_valid: Option<bool>,
    #[serde(rename = "lastUpdate", skip_serializing_if = "Option::is_none")]
    pub last_update: Option<String>,
    #[serde(rename = "nickName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub nick_name: Option<Option<String>>,
    #[serde(rename = "avatar", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub avatar: Option<Option<String>>,
    #[serde(rename = "role", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub role: Option<Option<String>>,
    #[serde(rename = "permission", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub permission: Option<Option<String>>,
}

impl ProfileResult {
    pub fn new() -> ProfileResult {
        ProfileResult {
            id: None,
            union_id: None,
            phone: None,
            create_date: None,
            user_name: None,
            phone_is_valid: None,
            data: None,
            email: None,
            email_is_valid: None,
            last_update: None,
            nick_name: None,
            avatar: None,
            role: None,
            permission: None,
        }
    }
}

