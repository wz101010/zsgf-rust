/*
 * 用户全部 API 文档
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FileListResult {
    #[serde(rename = "directories", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub directories: Option<Option<Vec<models::DirectoryItem>>>,
    #[serde(rename = "files", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub files: Option<Option<Vec<models::FileItem>>>,
    #[serde(rename = "totalDirectories", skip_serializing_if = "Option::is_none")]
    pub total_directories: Option<i32>,
    #[serde(rename = "totalFiles", skip_serializing_if = "Option::is_none")]
    pub total_files: Option<i32>,
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i64>,
}

impl FileListResult {
    pub fn new() -> FileListResult {
        FileListResult {
            directories: None,
            files: None,
            total_directories: None,
            total_files: None,
            size: None,
        }
    }
}

