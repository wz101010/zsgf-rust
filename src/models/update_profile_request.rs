/*
 * 用户全部 API 文档
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateProfileRequest {
    /// 用户头像的链接或路径，长度不能超过255个字符
    #[serde(rename = "avatar", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub avatar: Option<Option<String>>,
    /// 用户的其他数据，可以是序列化后的对象或JSON字符串
    #[serde(rename = "data", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub data: Option<Option<String>>,
    /// 用户的昵称，长度不能超过50个字符
    #[serde(rename = "nickName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub nick_name: Option<Option<String>>,
    /// 兴趣标签
    #[serde(rename = "interestTags", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub interest_tags: Option<Option<String>>,
    /// 个人简介，长度不能超过500个字符
    #[serde(rename = "biography", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub biography: Option<Option<String>>,
    /// 性别，长度不能超过15个字符
    #[serde(rename = "gender", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub gender: Option<Option<String>>,
    /// 生日
    #[serde(rename = "birthday", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub birthday: Option<Option<String>>,
    /// 职业，长度不能超过50个字符
    #[serde(rename = "occupation", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub occupation: Option<Option<String>>,
    /// 学历，长度不能超过50个字符
    #[serde(rename = "education", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub education: Option<Option<String>>,
    /// 联系方式，长度不能超过255个字符
    #[serde(rename = "contact", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub contact: Option<Option<String>>,
    /// 语言，长度不能超过50个字符
    #[serde(rename = "languages", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub languages: Option<Option<String>>,
    /// 社交网络链接，长度不能超过255个字符
    #[serde(rename = "socialLinks", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub social_links: Option<Option<String>>,
    /// 婚姻状态，长度不能超过20个字符
    #[serde(rename = "relationshipStatus", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub relationship_status: Option<Option<String>>,
    /// 公司，长度不能超过100个字符
    #[serde(rename = "company", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub company: Option<Option<String>>,
    /// 行业，长度不能超过50个字符
    #[serde(rename = "industry", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub industry: Option<Option<String>>,
    /// 行业职位，长度不能超过50个字符
    #[serde(rename = "companyPosition", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub company_position: Option<Option<String>>,
    /// 私密设置，长度不能超过500个字符
    #[serde(rename = "privateSettings", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub private_settings: Option<Option<String>>,
    /// 是否启用二步验证
    #[serde(rename = "enable2FAAuth", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub enable2_fa_auth: Option<Option<bool>>,
    /// 是否启用账号登录
    #[serde(rename = "enableUserNameSignIn", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub enable_user_name_sign_in: Option<Option<bool>>,
    /// 是否启用邮箱登录
    #[serde(rename = "enableEmailSignIn", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub enable_email_sign_in: Option<Option<bool>>,
    /// 是否启用手机登录
    #[serde(rename = "enablePhoneSignIn", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub enable_phone_sign_in: Option<Option<bool>>,
    /// 是否启用UnionID登录
    #[serde(rename = "enableUnionIDSignIn", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub enable_union_id_sign_in: Option<Option<bool>>,
    /// 是否启用OAuth2登录
    #[serde(rename = "enableOAuth", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub enable_o_auth: Option<Option<bool>>,
}

impl UpdateProfileRequest {
    pub fn new() -> UpdateProfileRequest {
        UpdateProfileRequest {
            avatar: None,
            data: None,
            nick_name: None,
            interest_tags: None,
            biography: None,
            gender: None,
            birthday: None,
            occupation: None,
            education: None,
            contact: None,
            languages: None,
            social_links: None,
            relationship_status: None,
            company: None,
            industry: None,
            company_position: None,
            private_settings: None,
            enable2_fa_auth: None,
            enable_user_name_sign_in: None,
            enable_email_sign_in: None,
            enable_phone_sign_in: None,
            enable_union_id_sign_in: None,
            enable_o_auth: None,
        }
    }
}

